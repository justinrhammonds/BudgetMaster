@model BudgetMaster.Models.DashboardVM

@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col-sm-3">
        <div class="panel panel-default">
            <div class="panel-heading">
                Current Account Balances
            </div>
            <div class="panel-body">
                @if (Model.Household.Accounts.Count() == 0)
                {
                <p>You currently have no accounts created. <a href="@Url.Action("Index","Accounts")">Click here to create a new account.</a></p>
                }
                @foreach (var account in Model.RecBalVM)
                {
                    <div>@account.Account.Name: $@account.Account.Balance</div>  
                    <div>(Reconciled Balance: $@account.RecBal)</div>
                }
            </div>
        </div>
        
    </div>
        <div class="col-sm-9">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Recent Transactions
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Account</th>
                                    <th>Total</th>
                                    <th>Category</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transaction in Model.Household.Accounts.SelectMany(a => a.Transactions))
                                {
                                    var textColor = transaction.Category.Type == "Expense" ? "text-warning" : "";
                                    var amount = transaction.Category.Type == "Expense" ? "- $" + @transaction.Amount : "+ $" + @transaction.Amount;
                                    
                                    <tr>
                                        <td>@transaction.PostedDate.ToString("M/dd/yy")</td>
                                        <td>
                                            @transaction.Account.Name @*- @transaction.PostedBy.FirstName*@
                                        </td>
                                        <td class="@textColor">@amount</td>
                                        <td>@transaction.Category.Name</td>
                                        <td>@transaction.Description</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                    <!-- /.table-responsive -->
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    <hr />
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Monthly Budget vs. Monthly Expenses
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <div id="morris-bar-chart"></div>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
</div>
<div id="morris-donut-chart"></div>

@section Scripts {
    <script>

        $.post('@Url.Action("GetCharts","Households")').then(function (response) {
            new Morris.Bar({
                element: 'morris-bar-chart',
                data: response.carBarList,
                xkey: 'category',
                ykeys: ['budgeted', 'actual'],
                labels: ['Budgeted', 'Actual'],
                resize: true,
                xLabelMargin: 2,
                gridTextColor: '#555',
                barColors: ['#331c16', '#2d5a2d'],
                xLabelAngle: 45,
                gridTextFamily: 'Montserrat',
                gridTextSize: 10
            });

            new Morris.Donut({
                element: 'morris-donut-chart',
                data: response.donutList,
                formatter: function (y, data) { return '$' + y },
                resize: true
            });
        });

    </script>
}
