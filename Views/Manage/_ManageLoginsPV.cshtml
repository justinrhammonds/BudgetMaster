@model BudgetMaster.Models.ManageLoginsViewModel
@using Microsoft.Owin.Security
@{
    ViewBag.Title = "Manage your external logins";
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h4>Manage Your External Logins</h4>
    </div>
    <div class="panel-body">
        <p class="text-success">@ViewBag.StatusMessage</p>
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (Model.CurrentLogins.Count > 0)
    {
        <h4>Registered Logins</h4>
            <table class="table">
                <tbody>
                    @foreach (var account in Model.CurrentLogins)
                    {
                        <tr>
                            <td>@account.LoginProvider</td>
                            <td>
                                @if (ViewBag.ShowRemoveButton)
                                {
                                    using (Html.BeginForm("RemoveLogin", "Manage"))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div>
                                            @Html.Hidden("loginProvider", account.LoginProvider)
                                            @Html.Hidden("providerKey", account.ProviderKey)
                                            <input type="submit" class="btn btn-success" value="Remove" title="Remove this @account.LoginProvider login from your account" />
                                        </div>
                                    }
                                }
                                else
                                {
                                    @: &nbsp;
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
    }
    if (Model.OtherLogins.Count > 0)
    {
        using (Html.BeginForm("LinkLogin", "Manage"))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in Model.OtherLogins)
                    {
                        string socialname = "";
                        switch (@p.AuthenticationType)
                        {

                            case "Twitter":
                                socialname = "fa-twitter-square";
                                break;
                            case "Facebook":
                                socialname = "fa-facebook-square";
                                break;
                        }
                        @*<button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>*@
                        <button type="submit" class="btn btn-lg btn-block btn-social btn-@p.AuthenticationType.ToLower()" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Login using your @p.Caption account">
                            <i class="fa @socialname"></i>
                            Login with @p.AuthenticationType
                        </button>
                    }
                </p>
            </div>
        }
    }
}
    </div>
</div>
